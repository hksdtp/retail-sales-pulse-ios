import { useEffect, useState } from 'react';

import { FirebaseService } from '@/services/FirebaseService';

interface FirebaseAutoSetupResult {
  isConfigured: boolean;
  isConfiguring: boolean;
  error: string | null;
}

export const useFirebaseAutoSetup = (): FirebaseAutoSetupResult => {
  const [isConfigured, setIsConfigured] = useState(false);
  const [isConfiguring, setIsConfiguring] = useState(false);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const autoSetupFirebase = async () => {
      try {
        // Ki·ªÉm tra xem Firebase ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh ch∆∞a
        const alreadyConfigured = FirebaseService.isConfigured();

        if (alreadyConfigured) {
          console.log('üî• Firebase already configured');
          setIsConfigured(true);
          return;
        }

        console.log('üîß Auto-configuring Firebase...');
        setIsConfiguring(true);

        // Th·ª≠ kh·ªüi t·∫°o t·ª´ localStorage tr∆∞·ªõc
        const fromLocalStorage = FirebaseService.initializeFromLocalStorage();
        if (fromLocalStorage) {
          console.log('‚úÖ Firebase initialized from localStorage');
          setIsConfigured(true);
          setIsConfiguring(false);
          return;
        }

        // N·∫øu kh√¥ng c√≥ trong localStorage, s·ª≠ d·ª•ng config m·∫∑c ƒë·ªãnh
        const defaultConfig = {
          apiKey: 'AIzaSyDXQJQJQJQJQJQJQJQJQJQJQJQJQJQJQJQ',
          authDomain: 'appqlgd.firebaseapp.com',
          projectId: 'appqlgd',
          storageBucket: 'appqlgd.appspot.com',
          messagingSenderId: '123456789012',
          appId: '1:123456789012:web:abcdefghijklmnop',
        };

        console.log('üîß Initializing Firebase with default config...');

        // Kh·ªüi t·∫°o Firebase v·ªõi config m·∫∑c ƒë·ªãnh
        const firebaseService = FirebaseService.initializeApp(defaultConfig);

        if (firebaseService) {
          console.log('‚úÖ Firebase auto-configured successfully');
          setIsConfigured(true);

          // L∆∞u v√†o localStorage ƒë·ªÉ l·∫ßn sau kh√¥ng c·∫ßn setup l·∫°i
          localStorage.setItem('firebaseConfig', JSON.stringify(defaultConfig));
          localStorage.setItem('firebaseConfigured', 'true');
        } else {
          throw new Error('Failed to initialize Firebase');
        }
      } catch (err) {
        console.error('‚ùå Firebase auto-setup failed:', err);
        setError(err instanceof Error ? err.message : 'Unknown error');
      } finally {
        setIsConfiguring(false);
      }
    };

    // Ch·∫°y auto-setup ngay khi component mount
    autoSetupFirebase();
  }, []);

  return {
    isConfigured,
    isConfiguring,
    error,
  };
};
